name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gcc-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        std:
          - -std=c++11
          - -std=c++14
          - -std=c++17
          - -std=c++20
    steps:
    - uses: actions/checkout@v2
    - name: Make test
      working-directory: test
      run: make test
      env:
        CXX: g++
        CXXFLAGS: '-fprofile-arcs -ftest-coverage -g -std=${{matrix.std}}'
        LDFLAGS: '-lgcov --coverage'
    - name: Run test
      working-directory: test
      run: ./test
    - name: Codecov
      working-directory: test
      run: bash <(curl -s https://codecov.io/bash) -x "gcov"

  ubsan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make test
      working-directory: test
      run: make test
      env:
        CXX: clang++
        CXXFLAGS: '-g -fsanitize=undefined'
        LDFLAGS: '-fsanitize=undefined -lgcc_s --rtlib=compiler-rt'
    - name: Run test
      working-directory: test
      run: ./test

  asan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make test
      working-directory: test
      run: make test
      env:
        BOOST_PFR_PATH: ../pfr/include
        CXX: clang++
        CXXFLAGS: '-fsanitize=address'
        LDFLAGS: '-fsanitize=address'
    - name: Run test
      working-directory: test
      run: ./test
