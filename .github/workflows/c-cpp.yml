name: C/C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gcc-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        std:
          - c++11
          - c++14
          - c++17
          - c++20
        compiler:
          - g++-8
          - g++-9
          - g++-10
          - g++-11
          - clang++-10
          - clang++-11
          - clang++-12
          - clang++-13
        exclude:
          - std: c++20
            compiler: g++-8
          - std: c++20
            compiler: g++-9

    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: sudo apt-get install ${{matrix.compiler}}
    - name: Make test
      working-directory: test
      run: make test
      env:
        CXX: ${{matrix.compiler}}
        CXXFLAGS: '-fprofile-arcs -ftest-coverage -g --std=${{matrix.std}}'
        LDFLAGS: '-lgcov --coverage'
    - name: Run test
      working-directory: test
      run: ./test
    - name: Codecov
      working-directory: test
      run: bash <(curl -s https://codecov.io/bash) -x "gcov"

  ubsan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make test
      working-directory: test
      run: make test
      env:
        CXX: clang++
        CXXFLAGS: '-g -fsanitize=undefined'
        LDFLAGS: '-fsanitize=undefined -lgcc_s --rtlib=compiler-rt'
    - name: Run test
      working-directory: test
      run: ./test

  asan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make test
      working-directory: test
      run: make test
      env:
        BOOST_PFR_PATH: ../pfr/include
        CXX: clang++
        CXXFLAGS: '-fsanitize=address'
        LDFLAGS: '-fsanitize=address'
    - name: Run test
      working-directory: test
      run: ./test
